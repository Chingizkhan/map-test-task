[{"F:\\сайты\\map\\src\\index.js":"1","F:\\сайты\\map\\src\\reportWebVitals.js":"2","F:\\сайты\\map\\src\\App.js":"3","F:\\сайты\\map\\src\\redux\\reducers\\rootReducer.js":"4","F:\\сайты\\map\\src\\redux\\actions\\map.js":"5","F:\\сайты\\map\\src\\redux\\reducers\\map.js":"6","F:\\сайты\\map\\src\\components\\List\\List.jsx":"7","F:\\сайты\\map\\src\\components\\Search\\Search.jsx":"8","F:\\сайты\\map\\src\\redux\\actions\\actionTypes.js":"9","F:\\сайты\\map\\src\\components\\List\\ListItem.jsx":"10"},{"size":1000,"mtime":1607187618349,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606460709434,"results":"13","hashOfConfig":"12"},{"size":2531,"mtime":1607353364543,"results":"14","hashOfConfig":"12"},{"size":111,"mtime":1607187881349,"results":"15","hashOfConfig":"12"},{"size":2626,"mtime":1607353144723,"results":"16","hashOfConfig":"12"},{"size":2141,"mtime":1607353319822,"results":"17","hashOfConfig":"12"},{"size":1460,"mtime":1607353363187,"results":"18","hashOfConfig":"12"},{"size":1629,"mtime":1607334149172,"results":"19","hashOfConfig":"12"},{"size":374,"mtime":1607353121558,"results":"20","hashOfConfig":"12"},{"size":899,"mtime":1607334149171,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pnp4hu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\сайты\\map\\src\\index.js",[],["44","45"],"F:\\сайты\\map\\src\\reportWebVitals.js",[],"F:\\сайты\\map\\src\\App.js",["46"],"import React from 'react'\r\nimport { GoogleMap, useLoadScript, Marker, Polyline } from '@react-google-maps/api'\r\nimport '@reach/combobox/styles.css'\r\nimport './reset.css'\r\nimport './App.scss'\r\nimport Search from './components/Search/Search'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { dispatchChangeLatLng, dispatchMarkers, getCoordinates } from './redux/actions/map'\r\nimport List from './components/List/List'\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: '1200px',\r\n  height: '100vh'\r\n}\r\nconst center = {\r\n  lat: 53.208778,\r\n  lng: 63.618408\r\n}\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch()\r\n  const markers = useSelector(({ map }) => map.markers)\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  })\r\n\r\n  const pathPolyline = markers.map(marker => {\r\n    return {\r\n      lat: marker.lat,\r\n      lng: marker.lng\r\n    }\r\n  })\r\n\r\n  const onMapClick = React.useCallback((e) => {\r\n    dispatch(dispatchMarkers(e))\r\n  }, [])\r\n\r\n  const mapRef = React.useRef()\r\n\r\n  // By saving these references to the map to out useRef. We can access it anywhere we were in the code and it won't cause any rerenders or anything like that\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map\r\n  }, [])\r\n  // You use state when you want it to cause rerenders\r\n  // You use Ref when you want to retain state without causing rerenders\r\n\r\n  const panTo = React.useCallback(({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng })\r\n    mapRef.current.setZoom(14)\r\n  }, [])\r\n\r\n  const onMarkerDragEnd = (e) => {\r\n    dispatch(dispatchChangeLatLng(e))\r\n  }\r\n\r\n  const onMarkerMouseDown = (e) => {\r\n    dispatch(getCoordinates(e))\r\n  }\r\n\r\n  if (loadError) return \"Не получилось загрузить карту\"\r\n  if (!isLoaded) return \"Загружаю карту\"\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Search panTo={panTo} />\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n        <Polyline path={pathPolyline} options={{ strokeColor: '#FF0000' }} />\r\n        {markers.map((marker, i) => {\r\n          return <Marker key={i} draggable={true} onDragEnd={onMarkerDragEnd} onMouseDown={onMarkerMouseDown} position={{ lat: marker.lat, lng: marker.lng }} />\r\n        })}\r\n      </GoogleMap>\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\n","F:\\сайты\\map\\src\\redux\\reducers\\rootReducer.js",[],"F:\\сайты\\map\\src\\redux\\actions\\map.js",[],"F:\\сайты\\map\\src\\redux\\reducers\\map.js",[],"F:\\сайты\\map\\src\\components\\List\\List.jsx",[],"F:\\сайты\\map\\src\\components\\Search\\Search.jsx",[],"F:\\сайты\\map\\src\\redux\\actions\\actionTypes.js",[],"F:\\сайты\\map\\src\\components\\List\\ListItem.jsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":6,"nodeType":"53","endLine":39,"endColumn":8,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [dispatch]",{"range":"60","text":"61"},[1075,1077],"[dispatch]"]